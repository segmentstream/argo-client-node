// tslint:disable
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.17.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource,
    IoK8sApiCoreV1AzureDiskVolumeSource,
    IoK8sApiCoreV1AzureFilePersistentVolumeSource,
    IoK8sApiCoreV1CSIPersistentVolumeSource,
    IoK8sApiCoreV1CephFSPersistentVolumeSource,
    IoK8sApiCoreV1CinderPersistentVolumeSource,
    IoK8sApiCoreV1FCVolumeSource,
    IoK8sApiCoreV1FlexPersistentVolumeSource,
    IoK8sApiCoreV1FlockerVolumeSource,
    IoK8sApiCoreV1GCEPersistentDiskVolumeSource,
    IoK8sApiCoreV1GlusterfsPersistentVolumeSource,
    IoK8sApiCoreV1HostPathVolumeSource,
    IoK8sApiCoreV1ISCSIPersistentVolumeSource,
    IoK8sApiCoreV1LocalVolumeSource,
    IoK8sApiCoreV1NFSVolumeSource,
    IoK8sApiCoreV1ObjectReference,
    IoK8sApiCoreV1PhotonPersistentDiskVolumeSource,
    IoK8sApiCoreV1PortworxVolumeSource,
    IoK8sApiCoreV1QuobyteVolumeSource,
    IoK8sApiCoreV1RBDPersistentVolumeSource,
    IoK8sApiCoreV1ScaleIOPersistentVolumeSource,
    IoK8sApiCoreV1StorageOSPersistentVolumeSource,
    IoK8sApiCoreV1VolumeNodeAffinity,
    IoK8sApiCoreV1VsphereVirtualDiskVolumeSource,
} from './';

/**
 * PersistentVolumeSpec is the specification of a persistent volume.
 * @export
 * @interface IoK8sApiCoreV1PersistentVolumeSpec
 */
export interface IoK8sApiCoreV1PersistentVolumeSpec {
    /**
     * AccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    accessModes?: Array<string>;
    /**
     * @type {IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    awsElasticBlockStore?: IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource;
    /**
     * @type {IoK8sApiCoreV1AzureDiskVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    azureDisk?: IoK8sApiCoreV1AzureDiskVolumeSource;
    /**
     * @type {IoK8sApiCoreV1AzureFilePersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    azureFile?: IoK8sApiCoreV1AzureFilePersistentVolumeSource;
    /**
     * A description of the persistent volume\'s resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    capacity?: { [key: string]: string; };
    /**
     * @type {IoK8sApiCoreV1CephFSPersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    cephfs?: IoK8sApiCoreV1CephFSPersistentVolumeSource;
    /**
     * @type {IoK8sApiCoreV1CinderPersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    cinder?: IoK8sApiCoreV1CinderPersistentVolumeSource;
    /**
     * @type {IoK8sApiCoreV1ObjectReference}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    claimRef?: IoK8sApiCoreV1ObjectReference;
    /**
     * @type {IoK8sApiCoreV1CSIPersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    csi?: IoK8sApiCoreV1CSIPersistentVolumeSource;
    /**
     * @type {IoK8sApiCoreV1FCVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    fc?: IoK8sApiCoreV1FCVolumeSource;
    /**
     * @type {IoK8sApiCoreV1FlexPersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    flexVolume?: IoK8sApiCoreV1FlexPersistentVolumeSource;
    /**
     * @type {IoK8sApiCoreV1FlockerVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    flocker?: IoK8sApiCoreV1FlockerVolumeSource;
    /**
     * @type {IoK8sApiCoreV1GCEPersistentDiskVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    gcePersistentDisk?: IoK8sApiCoreV1GCEPersistentDiskVolumeSource;
    /**
     * @type {IoK8sApiCoreV1GlusterfsPersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    glusterfs?: IoK8sApiCoreV1GlusterfsPersistentVolumeSource;
    /**
     * @type {IoK8sApiCoreV1HostPathVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    hostPath?: IoK8sApiCoreV1HostPathVolumeSource;
    /**
     * @type {IoK8sApiCoreV1ISCSIPersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    iscsi?: IoK8sApiCoreV1ISCSIPersistentVolumeSource;
    /**
     * @type {IoK8sApiCoreV1LocalVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    local?: IoK8sApiCoreV1LocalVolumeSource;
    /**
     * A list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    mountOptions?: Array<string>;
    /**
     * @type {IoK8sApiCoreV1NFSVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    nfs?: IoK8sApiCoreV1NFSVolumeSource;
    /**
     * @type {IoK8sApiCoreV1VolumeNodeAffinity}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    nodeAffinity?: IoK8sApiCoreV1VolumeNodeAffinity;
    /**
     * What happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming
     * @type {string}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    persistentVolumeReclaimPolicy?: string;
    /**
     * @type {IoK8sApiCoreV1PhotonPersistentDiskVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    photonPersistentDisk?: IoK8sApiCoreV1PhotonPersistentDiskVolumeSource;
    /**
     * @type {IoK8sApiCoreV1PortworxVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    portworxVolume?: IoK8sApiCoreV1PortworxVolumeSource;
    /**
     * @type {IoK8sApiCoreV1QuobyteVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    quobyte?: IoK8sApiCoreV1QuobyteVolumeSource;
    /**
     * @type {IoK8sApiCoreV1RBDPersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    rbd?: IoK8sApiCoreV1RBDPersistentVolumeSource;
    /**
     * @type {IoK8sApiCoreV1ScaleIOPersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    scaleIO?: IoK8sApiCoreV1ScaleIOPersistentVolumeSource;
    /**
     * Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.
     * @type {string}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    storageClassName?: string;
    /**
     * @type {IoK8sApiCoreV1StorageOSPersistentVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    storageos?: IoK8sApiCoreV1StorageOSPersistentVolumeSource;
    /**
     * volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec. This is a beta feature.
     * @type {string}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    volumeMode?: string;
    /**
     * @type {IoK8sApiCoreV1VsphereVirtualDiskVolumeSource}
     * @memberof IoK8sApiCoreV1PersistentVolumeSpec
     */
    vsphereVolume?: IoK8sApiCoreV1VsphereVirtualDiskVolumeSource;
}
